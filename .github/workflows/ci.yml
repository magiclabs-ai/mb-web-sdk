name: CI

on:
  pull_request:

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - name: "Install Node"
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: true
      - name: Run biome lint
        run: pnpm run lint
  format:
    name: Format Code Base
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - name: "Install Node"
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: true
      - name: Run biome format
        run: pnpm run format
  build:
    name: Build Code Base
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    environment: "prod"
    env:
      WS_MAX_RECONNECTION_ATTEMPTS: ${{vars.WS_MAX_RECONNECTION_ATTEMPTS}}
      WS_RECONNECT_INTERVAL: ${{vars.WS_RECONNECT_INTERVAL}}
      API_HOST: ${{vars.API_HOST}}
      DEFAULT_TIMEOUT: ${{vars.DEFAULT_TIMEOUT}}
      PHOTO_DEPRECATION_WARNING_THRESHOLD: ${{vars.PHOTO_DEPRECATION_WARNING_THRESHOLD}}
    steps:
      - uses: actions/checkout@v3
      - name: "Install Node"
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: true
      - name: "Build"
        run: pnpm run turbo:build
  test:
    name: Test Code Base
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - name: "Install Node"
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
      - name: Install xsel
        run: sudo apt-get install -y xsel
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: true
      - name: "Test"
        run: pnpm run turbo:coverage
      - name: "Report Core Coverage"
        if: always() # Also generate the report if tests are failing
        uses: davelosert/vitest-coverage-report-action@v1
        with:
          json-summary-path: "./coverage/coverage-summary.json"
          json-final-path: "./coverage/coverage-final.json"
          vite-config-path: "./configs/vitest/vitest.config.ts"
